-- Select latest non-pre/post literacy assessment and merge to pre/post literacy assessment data.
-- This query has slightly different results compared to the Access query -- this appears to be because PRE_DESC in dbo_EVAL_ASSESSMENT is cut off. T SQL version seems to be linking more.

-- QUERY SYNTAX (Select latest literacy assessment, excluding pre/post tagged data points):

SELECT allLIT1.CONFIG_ID, allLIT1.STUDENT_ID, allLIT1.FREQUENCY_PERIOD_ID, allLIT1.SKILL_ID, allLIT1.SKILL_DESCRIPTION, allLIT1.INTERVAL, allLIT1.INDICATOR_DESC, allLIT1.FREQ_SORT, allLIT1.SCHOOL_NAME, allLIT1.SITE_NAME, allLIT1.STUDENT_NAME, allLIT1.SCHOOL_ID, allLIT1.SITE_ID, allLIT1.PERF_DATE, allLIT1.PERFORMANCE_VALUE, allLIT1.PERFORMANCE_VALUE_NUMERIC, allLIT1.SCALE_LOCAL, allLIT1.SCALE_EVAL, allLIT1.SCALE_TYPE, allLIT1.PERF_DIRECTION, allLIT1.PROC_TYPE, allLIT1.PERF_RUN_DATE, allLIT1.INDICATOR_AREA_ID, allLIT1.CONFIG_NAME, allLIT1.PRIMARY_CM, allLIT1.INTERVENTION_TIME, allLIT1.DATA_POINT, allLIT1.CG_VALUE_DISPLAY, allLIT1.CG_VALUE_NUM, allLIT1.CG_LETTER_VIEW, allLIT1.CG_LETTER_VIEW_ALL, allLIT1.Tag
FROM dbo.RPT_PERFORMANCE_LEVEL AS allLIT1 LEFT OUTER JOIN dbo.RPT_PERFORMANCE_LEVEL AS allLIT2
ON (allLIT1.STUDENT_ID = allLIT2.STUDENT_ID AND allLIT1.INDICATOR_DESC LIKE allLIT2.INDICATOR_DESC AND allLIT1.PERF_DATE < allLIT2.PERF_DATE)
WHERE allLIT2.STUDENT_ID IS NULL AND allLIT1.CONFIG_NAME LIKE 'ELA/Lit Assessment%' AND allLIT1.Tag IS NULL;

-- QUERY SYNTAX (Merge to pre/post literacy assessment data -- BASED ON ABOVE QUERY -- STEP 1):

SELECT dbo.RPT_STUDENT_MAIN.SITE_NAME, dbo.RPT_STUDENT_MAIN.SCHOOL_NAME, dbo.RPT_STUDENT_MAIN.GRADE_ID, dbo.RPT_STUDENT_MAIN.DIPLOMAS_NOW_SCHOOL, dbo.RPT_STUDENT_MAIN.STUDENT_ID, dbo.RPT_STUDENT_MAIN.SCHOOL_ID, prepost.ASSESSMENT_TYPE, prepost.PRE_VALUE, prepost.PRE_VALUE_DISPLAY, prepost.PRE_VALUE_NUM, prepost.PRE_DATE, prepost.PRE_DESC, prepost.PRE_TRACK, prepost.PRE_TRACK_EVAL, prepost.PRE_TRACK_NATIONAL, prepost.POST_VALUE, prepost.POST_VALUE_DISPLAY, prepost.POST_VALUE_NUM, prepost.POST_DATE, prepost.POST_DESC, prepost.POST_TRACK, prepost.POST_TRACK_EVAL, prepost.POST_TRACK_NATIONAL, prepost.DOSAGE_CATEGORY, prepost.TTL_TIME, prepost.ENROLLED_DAYS_CATEGORIES, prepost.CURRENTLY_ENROLLED, prepost.ENROLLED_DAYS, prepost.LIT_ASSESS_RAWCHANGE, prepost.LIT_ASSESS_RAWCHANGE_DEGREE, prepost.LIT_ASSESS_PERFORMANCECHANGE_LOCAL, prepost.LIT_ASSESS_PERFORMANCECHANGE_NORMALIZED, prepost.LIT_ASSESS_PERCENTCHANGE, prepost.STATUS_SITE_DOSAGE_GOAL, prepost.SITE_DOSAGE_GOAL, prepost.Attendance_IA, prepost.ELA_IA, prepost.Math_IA, prepost.Behavior_IA, MY_PROXY_LITAssess.CONFIG_ID, MY_PROXY_LITAssess.FREQUENCY_PERIOD_ID, MY_PROXY_LITAssess.SKILL_ID, MY_PROXY_LITAssess.SKILL_DESCRIPTION, MY_PROXY_LITAssess.INTERVAL, MY_PROXY_LITAssess.INDICATOR_DESC, MY_PROXY_LITAssess.FREQ_SORT, MY_PROXY_LITAssess.STUDENT_NAME, MY_PROXY_LITAssess.SITE_ID, MY_PROXY_LITAssess.PERF_DATE, MY_PROXY_LITAssess.PERFORMANCE_VALUE, MY_PROXY_LITAssess.PERFORMANCE_VALUE_NUMERIC, MY_PROXY_LITAssess.SCALE_LOCAL, MY_PROXY_LITAssess.SCALE_EVAL, MY_PROXY_LITAssess.SCALE_TYPE, MY_PROXY_LITAssess.PERF_DIRECTION, MY_PROXY_LITAssess.PROC_TYPE, MY_PROXY_LITAssess.PERF_RUN_DATE, MY_PROXY_LITAssess.INDICATOR_AREA_ID, MY_PROXY_LITAssess.CONFIG_NAME, MY_PROXY_LITAssess.PRIMARY_CM, MY_PROXY_LITAssess.INTERVENTION_TIME, MY_PROXY_LITAssess.DATA_POINT, MY_PROXY_LITAssess.CG_VALUE_DISPLAY, MY_PROXY_LITAssess.CG_VALUE_NUM, MY_PROXY_LITAssess.CG_LETTER_VIEW, MY_PROXY_LITAssess.CG_LETTER_VIEW_ALL, MY_PROXY_LITAssess.Tag, dbo.RPT_SCHOOL_GRADE.INDICATOR_ID, dbo.RPT_SCHOOL_GRADE.B_RULE_VAL1, dbo.RPT_SCHOOL_GRADE.B_RULE_VAL2, dbo.RPT_SCHOOL_GRADE.B_RULE_VAL3, dbo.RPT_SCHOOL_GRADE.B_RULE_VAL4, dbo.RPT_SCHOOL_GRADE.B_RULE_VAL5,
CASE WHEN prepost.POST_DATE IS NULL AND prepost.PRE_DATE < MY_PROXY_LITAssess.PERF_DATE AND prepost.PRE_DESC LIKE MY_PROXY_LITAssess.SKILL_DESCRIPTION THEN MY_PROXY_LITAssess.PERF_DATE ELSE prepost.POST_DATE END AS MY_PERF_DATE,
CASE WHEN prepost.POST_DATE IS NULL AND prepost.PRE_DATE < MY_PROXY_LITAssess.PERF_DATE AND prepost.PRE_DESC LIKE MY_PROXY_LITAssess.SKILL_DESCRIPTION THEN MY_PROXY_LITAssess.SKILL_DESCRIPTION ELSE prepost.POST_DESC END AS MY_DESC,
CASE WHEN prepost.POST_DATE IS NULL AND prepost.PRE_DATE < MY_PROXY_LITAssess.PERF_DATE AND prepost.PRE_DESC LIKE MY_PROXY_LITAssess.SKILL_DESCRIPTION THEN MY_PROXY_LITAssess.PERFORMANCE_VALUE_NUMERIC ELSE prepost.POST_VALUE_NUM END AS MY_VALUE_NUM,
CASE WHEN prepost.POST_DATE IS NULL AND prepost.PRE_DATE < MY_PROXY_LITAssess.PERF_DATE AND prepost.PRE_DESC LIKE MY_PROXY_LITAssess.SKILL_DESCRIPTION THEN MY_PROXY_LITAssess.SCALE_LOCAL ELSE prepost.POST_TRACK END AS MY_TRACK,
CASE WHEN prepost.POST_DATE IS NULL AND prepost.PRE_DATE < MY_PROXY_LITAssess.PERF_DATE AND prepost.PRE_DESC LIKE MY_PROXY_LITAssess.SKILL_DESCRIPTION THEN MY_PROXY_LITAssess.SCALE_EVAL ELSE prepost.POST_TRACK_EVAL END AS MY_TRACK_EVAL,
CASE WHEN dbo.RPT_STUDENT_MAIN.GRADE_ID = 21 THEN -1 WHEN dbo.RPT_STUDENT_MAIN.GRADE_ID = 22 THEN 0 ELSE dbo.RPT_STUDENT_MAIN.GRADE_ID END AS GRADE_ID_RECODE,
CASE WHEN prepost.TTL_TIME >= dbo.RPT_SCHOOL_GRADE.B_RULE_VAL2 THEN 1 WHEN prepost.TTL_TIME < dbo.RPT_SCHOOL_GRADE.B_RULE_VAL2 THEN 0 ELSE NULL END AS MY_MET_Q3_DOSAGE
FROM dbo.RPT_SCHOOL_GRADE INNER JOIN (dbo.RPT_STUDENT_MAIN INNER JOIN (dbo.EVAL_ASSESSMENT AS prepost LEFT OUTER JOIN
(*****ABOVE_QUERY*****)
AS MY_PROXY_LITAssess ON prepost.STUDENT_ID = MY_PROXY_LITAssess.STUDENT_ID) ON (dbo.RPT_STUDENT_MAIN.STUDENT_ID = prepost.STUDENT_ID)) ON (dbo.RPT_SCHOOL_GRADE.SCHOOL_ID = prepost.SCHOOL_ID AND dbo.RPT_SCHOOL_GRADE.INDICATOR_ID = 3)
WHERE dbo.RPT_SCHOOL_GRADE.GRADE_ID = dbo.RPT_STUDENT_MAIN.GRADE_ID AND prepost.ASSESSMENT_TYPE LIKE 'LITERACY';

-- QUERY SYNTAX (Merge to pre/post literacy assessment data -- BASED ON ABOVE QUERY -- STEP 2 -- this extra step is required since calculations for new variables can't reference variables that were just created in the same query):

SELECT LIT.*,
CASE WHEN (PRE_VALUE_NUM IS NOT NULL AND MY_VALUE_NUM IS NOT NULL) AND PRE_VALUE_NUM < MY_VALUE_NUM THEN 'Increase' WHEN (PRE_VALUE_NUM IS NOT NULL AND MY_VALUE_NUM IS NOT NULL) AND PRE_VALUE_NUM = MY_VALUE_NUM THEN 'No Change' WHEN (PRE_VALUE_NUM IS NOT NULL AND MY_VALUE_NUM IS NOT NULL) AND PRE_VALUE_NUM > MY_VALUE_NUM THEN 'Decrease' ELSE 'Insufficient Data' END AS MY_RAWCHANGE_DEGREE,
CASE WHEN (PRE_TRACK IS NOT NULL AND MY_TRACK IS NOT NULL) THEN PRE_TRACK + ' to ' + MY_TRACK ELSE 'Insufficient Data' END AS MY_PERFORMANCECHANGE_LOCAL,
CASE WHEN (PRE_TRACK_EVAL IS NOT NULL AND MY_TRACK_EVAL IS NOT NULL) THEN PRE_TRACK_EVAL + ' to ' + MY_TRACK_EVAL ELSE 'Insufficient Data' END AS MY_PERFORMANCECHANGE_NORMALIZED,
CASE WHEN ((SCHOOL_ID = 2848 Or SCHOOL_ID = 2988) And GRADE_ID_RECODE < 9) Or (SCHOOL_ID = 3010 And GRADE_ID_RECODE > 9) THEN '0' ELSE DIPLOMAS_NOW_SCHOOL END AS DN_SCHOOL_BY_GRADE,
CASE WHEN GRADE_ID_RECODE >= B_RULE_VAL3 AND GRADE_ID_RECODE <= B_RULE_VAL4 THEN 1 WHEN GRADE_ID_RECODE < B_RULE_VAL3 OR GRADE_ID_RECODE > B_RULE_VAL4 THEN 0 ELSE NULL END AS MY_IN_IOG_GRADE_RANGE
FROM
(*****ABOVE_QUERY*****)
AS LIT
ORDER BY SITE_NAME, SCHOOL_NAME, GRADE_ID, STUDENT_ID;

-- QUERY SYNTAX (Merge to pre/post literacy assessment data -- SINGLE QUERY VERSION):

SELECT LIT.*,
CASE WHEN (PRE_VALUE_NUM IS NOT NULL AND MY_VALUE_NUM IS NOT NULL) AND PRE_VALUE_NUM < MY_VALUE_NUM THEN 'Increase' WHEN (PRE_VALUE_NUM IS NOT NULL AND MY_VALUE_NUM IS NOT NULL) AND PRE_VALUE_NUM = MY_VALUE_NUM THEN 'No Change' WHEN (PRE_VALUE_NUM IS NOT NULL AND MY_VALUE_NUM IS NOT NULL) AND PRE_VALUE_NUM > MY_VALUE_NUM THEN 'Decrease' ELSE 'Insufficient Data' END AS MY_RAWCHANGE_DEGREE,
CASE WHEN (PRE_TRACK IS NOT NULL AND MY_TRACK IS NOT NULL) THEN PRE_TRACK + ' to ' + MY_TRACK ELSE 'Insufficient Data' END AS MY_PERFORMANCECHANGE_LOCAL,
CASE WHEN (PRE_TRACK_EVAL IS NOT NULL AND MY_TRACK_EVAL IS NOT NULL) THEN PRE_TRACK_EVAL + ' to ' + MY_TRACK_EVAL ELSE 'Insufficient Data' END AS MY_PERFORMANCECHANGE_NORMALIZED,
CASE WHEN ((SCHOOL_ID = 2848 Or SCHOOL_ID = 2988) And GRADE_ID_RECODE < 9) Or (SCHOOL_ID = 3010 And GRADE_ID_RECODE > 9) THEN '0' ELSE DIPLOMAS_NOW_SCHOOL END AS DN_SCHOOL_BY_GRADE,
CASE WHEN GRADE_ID_RECODE >= B_RULE_VAL3 AND GRADE_ID_RECODE <= B_RULE_VAL4 THEN 1 WHEN GRADE_ID_RECODE < B_RULE_VAL3 OR GRADE_ID_RECODE > B_RULE_VAL4 THEN 0 ELSE NULL END AS MY_IN_IOG_GRADE_RANGE
FROM
(SELECT dbo.RPT_STUDENT_MAIN.SITE_NAME, dbo.RPT_STUDENT_MAIN.SCHOOL_NAME, dbo.RPT_STUDENT_MAIN.GRADE_ID, dbo.RPT_STUDENT_MAIN.DIPLOMAS_NOW_SCHOOL, dbo.RPT_STUDENT_MAIN.STUDENT_ID, dbo.RPT_STUDENT_MAIN.SCHOOL_ID, prepost.ASSESSMENT_TYPE, prepost.PRE_VALUE, prepost.PRE_VALUE_DISPLAY, prepost.PRE_VALUE_NUM, prepost.PRE_DATE, prepost.PRE_DESC, prepost.PRE_TRACK, prepost.PRE_TRACK_EVAL, prepost.PRE_TRACK_NATIONAL, prepost.POST_VALUE, prepost.POST_VALUE_DISPLAY, prepost.POST_VALUE_NUM, prepost.POST_DATE, prepost.POST_DESC, prepost.POST_TRACK, prepost.POST_TRACK_EVAL, prepost.POST_TRACK_NATIONAL, prepost.DOSAGE_CATEGORY, prepost.TTL_TIME, prepost.ENROLLED_DAYS_CATEGORIES, prepost.CURRENTLY_ENROLLED, prepost.ENROLLED_DAYS, prepost.LIT_ASSESS_RAWCHANGE, prepost.LIT_ASSESS_RAWCHANGE_DEGREE, prepost.LIT_ASSESS_PERFORMANCECHANGE_LOCAL, prepost.LIT_ASSESS_PERFORMANCECHANGE_NORMALIZED, prepost.LIT_ASSESS_PERCENTCHANGE, prepost.STATUS_SITE_DOSAGE_GOAL, prepost.SITE_DOSAGE_GOAL, prepost.Attendance_IA, prepost.ELA_IA, prepost.Math_IA, prepost.Behavior_IA, MY_PROXY_LITAssess.CONFIG_ID, MY_PROXY_LITAssess.FREQUENCY_PERIOD_ID, MY_PROXY_LITAssess.SKILL_ID, MY_PROXY_LITAssess.SKILL_DESCRIPTION, MY_PROXY_LITAssess.INTERVAL, MY_PROXY_LITAssess.INDICATOR_DESC, MY_PROXY_LITAssess.FREQ_SORT, MY_PROXY_LITAssess.STUDENT_NAME, MY_PROXY_LITAssess.SITE_ID, MY_PROXY_LITAssess.PERF_DATE, MY_PROXY_LITAssess.PERFORMANCE_VALUE, MY_PROXY_LITAssess.PERFORMANCE_VALUE_NUMERIC, MY_PROXY_LITAssess.SCALE_LOCAL, MY_PROXY_LITAssess.SCALE_EVAL, MY_PROXY_LITAssess.SCALE_TYPE, MY_PROXY_LITAssess.PERF_DIRECTION, MY_PROXY_LITAssess.PROC_TYPE, MY_PROXY_LITAssess.PERF_RUN_DATE, MY_PROXY_LITAssess.INDICATOR_AREA_ID, MY_PROXY_LITAssess.CONFIG_NAME, MY_PROXY_LITAssess.PRIMARY_CM, MY_PROXY_LITAssess.INTERVENTION_TIME, MY_PROXY_LITAssess.DATA_POINT, MY_PROXY_LITAssess.CG_VALUE_DISPLAY, MY_PROXY_LITAssess.CG_VALUE_NUM, MY_PROXY_LITAssess.CG_LETTER_VIEW, MY_PROXY_LITAssess.CG_LETTER_VIEW_ALL, MY_PROXY_LITAssess.Tag, dbo.RPT_SCHOOL_GRADE.INDICATOR_ID, dbo.RPT_SCHOOL_GRADE.B_RULE_VAL1, dbo.RPT_SCHOOL_GRADE.B_RULE_VAL2, dbo.RPT_SCHOOL_GRADE.B_RULE_VAL3, dbo.RPT_SCHOOL_GRADE.B_RULE_VAL4, dbo.RPT_SCHOOL_GRADE.B_RULE_VAL5,
CASE WHEN prepost.POST_DATE IS NULL AND prepost.PRE_DATE < MY_PROXY_LITAssess.PERF_DATE AND prepost.PRE_DESC LIKE MY_PROXY_LITAssess.SKILL_DESCRIPTION THEN MY_PROXY_LITAssess.PERF_DATE ELSE prepost.POST_DATE END AS MY_PERF_DATE,
CASE WHEN prepost.POST_DATE IS NULL AND prepost.PRE_DATE < MY_PROXY_LITAssess.PERF_DATE AND prepost.PRE_DESC LIKE MY_PROXY_LITAssess.SKILL_DESCRIPTION THEN MY_PROXY_LITAssess.SKILL_DESCRIPTION ELSE prepost.POST_DESC END AS MY_DESC,
CASE WHEN prepost.POST_DATE IS NULL AND prepost.PRE_DATE < MY_PROXY_LITAssess.PERF_DATE AND prepost.PRE_DESC LIKE MY_PROXY_LITAssess.SKILL_DESCRIPTION THEN MY_PROXY_LITAssess.PERFORMANCE_VALUE_NUMERIC ELSE prepost.POST_VALUE_NUM END AS MY_VALUE_NUM,
CASE WHEN prepost.POST_DATE IS NULL AND prepost.PRE_DATE < MY_PROXY_LITAssess.PERF_DATE AND prepost.PRE_DESC LIKE MY_PROXY_LITAssess.SKILL_DESCRIPTION THEN MY_PROXY_LITAssess.SCALE_LOCAL ELSE prepost.POST_TRACK END AS MY_TRACK,
CASE WHEN prepost.POST_DATE IS NULL AND prepost.PRE_DATE < MY_PROXY_LITAssess.PERF_DATE AND prepost.PRE_DESC LIKE MY_PROXY_LITAssess.SKILL_DESCRIPTION THEN MY_PROXY_LITAssess.SCALE_EVAL ELSE prepost.POST_TRACK_EVAL END AS MY_TRACK_EVAL,
CASE WHEN dbo.RPT_STUDENT_MAIN.GRADE_ID = 21 THEN -1 WHEN dbo.RPT_STUDENT_MAIN.GRADE_ID = 22 THEN 0 ELSE dbo.RPT_STUDENT_MAIN.GRADE_ID END AS GRADE_ID_RECODE,
CASE WHEN prepost.TTL_TIME >= dbo.RPT_SCHOOL_GRADE.B_RULE_VAL2 THEN 1 WHEN prepost.TTL_TIME < dbo.RPT_SCHOOL_GRADE.B_RULE_VAL2 THEN 0 ELSE NULL END AS MY_MET_Q3_DOSAGE
FROM dbo.RPT_SCHOOL_GRADE INNER JOIN (dbo.RPT_STUDENT_MAIN INNER JOIN (dbo.EVAL_ASSESSMENT AS prepost LEFT OUTER JOIN
(SELECT allLIT1.CONFIG_ID, allLIT1.STUDENT_ID, allLIT1.FREQUENCY_PERIOD_ID, allLIT1.SKILL_ID, allLIT1.SKILL_DESCRIPTION, allLIT1.INTERVAL, allLIT1.INDICATOR_DESC, allLIT1.FREQ_SORT, allLIT1.SCHOOL_NAME, allLIT1.SITE_NAME, allLIT1.STUDENT_NAME, allLIT1.SCHOOL_ID, allLIT1.SITE_ID, allLIT1.PERF_DATE, allLIT1.PERFORMANCE_VALUE, allLIT1.PERFORMANCE_VALUE_NUMERIC, allLIT1.SCALE_LOCAL, allLIT1.SCALE_EVAL, allLIT1.SCALE_TYPE, allLIT1.PERF_DIRECTION, allLIT1.PROC_TYPE, allLIT1.PERF_RUN_DATE, allLIT1.INDICATOR_AREA_ID, allLIT1.CONFIG_NAME, allLIT1.PRIMARY_CM, allLIT1.INTERVENTION_TIME, allLIT1.DATA_POINT, allLIT1.CG_VALUE_DISPLAY, allLIT1.CG_VALUE_NUM, allLIT1.CG_LETTER_VIEW, allLIT1.CG_LETTER_VIEW_ALL, allLIT1.Tag
FROM dbo.RPT_PERFORMANCE_LEVEL AS allLIT1 LEFT OUTER JOIN dbo.RPT_PERFORMANCE_LEVEL AS allLIT2
ON (allLIT1.STUDENT_ID = allLIT2.STUDENT_ID AND allLIT1.INDICATOR_DESC LIKE allLIT2.INDICATOR_DESC AND allLIT1.PERF_DATE < allLIT2.PERF_DATE)
WHERE allLIT2.STUDENT_ID IS NULL AND allLIT1.CONFIG_NAME LIKE 'ELA/Lit Assessment%' AND allLIT1.Tag IS NULL)
AS MY_PROXY_LITAssess ON prepost.STUDENT_ID = MY_PROXY_LITAssess.STUDENT_ID) ON (dbo.RPT_STUDENT_MAIN.STUDENT_ID = prepost.STUDENT_ID)) ON (dbo.RPT_SCHOOL_GRADE.SCHOOL_ID = prepost.SCHOOL_ID AND dbo.RPT_SCHOOL_GRADE.INDICATOR_ID = 3)
WHERE dbo.RPT_SCHOOL_GRADE.GRADE_ID = dbo.RPT_STUDENT_MAIN.GRADE_ID AND prepost.ASSESSMENT_TYPE LIKE 'LITERACY')
AS LIT
ORDER BY SITE_NAME, SCHOOL_NAME, GRADE_ID, STUDENT_ID;