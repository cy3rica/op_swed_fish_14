-- Select latest non-pre/post ELA CG and merge to pre/post ELA CG Data.

-- QUERY SYNTAX (Select latest ELA CG, excluding pre/post tagged data points):

SELECT allELA1.CONFIG_ID, allELA1.STUDENT_ID, allELA1.FREQUENCY_PERIOD_ID, allELA1.SKILL_ID, allELA1.SKILL_DESCRIPTION, allELA1.INTERVAL, allELA1.INDICATOR_DESC, allELA1.FREQ_SORT, allELA1.SCHOOL_NAME, allELA1.SITE_NAME, allELA1.STUDENT_NAME, allELA1.SCHOOL_ID, allELA1.SITE_ID, allELA1.PERF_DATE, allELA1.PERFORMANCE_VALUE, allELA1.PERFORMANCE_VALUE_NUMERIC, allELA1.SCALE_LOCAL, allELA1.SCALE_EVAL, allELA1.SCALE_TYPE, allELA1.PERF_DIRECTION, allELA1.PROC_TYPE, allELA1.PERF_RUN_DATE, allELA1.INDICATOR_AREA_ID, allELA1.CONFIG_NAME, allELA1.PRIMARY_CM, allELA1.INTERVENTION_TIME, allELA1.DATA_POINT, allELA1.CG_VALUE_DISPLAY, allELA1.CG_VALUE_NUM, allELA1.CG_LETTER_VIEW, allELA1.CG_LETTER_VIEW_ALL, allELA1.Tag
FROM dbo.RPT_PERFORMANCE_LEVEL AS allELA1 LEFT OUTER JOIN dbo.RPT_PERFORMANCE_LEVEL AS allELA2 ON (allELA1.STUDENT_ID = allELA2.STUDENT_ID AND allELA1.INDICATOR_DESC LIKE allELA2.INDICATOR_DESC AND allELA1.FREQ_SORT < allELA2.FREQ_SORT)
WHERE allELA2.STUDENT_ID IS NULL AND allELA1.SKILL_DESCRIPTION LIKE 'ELA Course Grade' AND allELA1.Tag IS NULL;

-- QUERY SYNTAX (Merge to pre/post ELA CG data -- BASED ON ABOVE QUERY -- STEP 1):

SELECT dbo.RPT_STUDENT_MAIN.SITE_NAME, dbo.RPT_STUDENT_MAIN.SCHOOL_NAME, dbo.RPT_STUDENT_MAIN.GRADE_ID, dbo.RPT_STUDENT_MAIN.DIPLOMAS_NOW_SCHOOL, dbo.RPT_STUDENT_MAIN.STUDENT_ID, dbo.RPT_STUDENT_MAIN.SCHOOL_ID, prepost.PRE_ELA_CG_VALUE, prepost.PRE_ELA_CG_VALUE_DISPLAY, prepost.PRE_ELA_CG_VALUE_NUM, prepost.PRE_ELA_DESC, prepost.PRE_ELA_FREQ, prepost.PRE_ELA_TRACK, prepost.PRE_ELA_TRACK_EVAL, prepost.PRE_SCENARIO, prepost.PRE_LETTER_VIEW, prepost.PRE_CG_LETTER_SCALE_ALL, prepost.DOSAGE_CATEGORY, prepost.TTL_TIME, prepost.POST_ELA_CG_VALUE, prepost.POST_ELA_CG_VALUE_DISPLAY, prepost.POST_ELA_CG_VALUE_NUM, prepost.POST_ELA_DESC, prepost.POST_ELA_FREQ, prepost.POST_ELA_TRACK, prepost.POST_ELA_TRACK_EVAL, prepost.POST_SCENARIO, prepost.POST_LETTER_VIEW, prepost.POST_CG_LETTER_SCALE_ALL, prepost.LETTERGADE_CHANGE_ACTUAL, prepost.LETTERGADE_CHANGE_GENERAL, prepost.CG_Performance_Level_Change, prepost.CG_Change, prepost.Enrollment_Duration, prepost.ENROLL_DAYS, prepost.STATUS_SITE_DOSAGE_GOAL, prepost.SITE_DOSAGE_GOAL, prepost.Attendance_IA, prepost.ELA_IA, prepost.Math_IA, prepost.Behavior_IA, MY_PROXY_ELA_CG.CONFIG_ID, MY_PROXY_ELA_CG.FREQUENCY_PERIOD_ID, MY_PROXY_ELA_CG.SKILL_ID, MY_PROXY_ELA_CG.SKILL_DESCRIPTION, MY_PROXY_ELA_CG.INTERVAL, MY_PROXY_ELA_CG.INDICATOR_DESC, MY_PROXY_ELA_CG.FREQ_SORT, MY_PROXY_ELA_CG.STUDENT_NAME, MY_PROXY_ELA_CG.SITE_ID, MY_PROXY_ELA_CG.PERF_DATE, MY_PROXY_ELA_CG.PERFORMANCE_VALUE, MY_PROXY_ELA_CG.PERFORMANCE_VALUE_NUMERIC, MY_PROXY_ELA_CG.SCALE_LOCAL, MY_PROXY_ELA_CG.SCALE_EVAL, MY_PROXY_ELA_CG.SCALE_TYPE, MY_PROXY_ELA_CG.PERF_DIRECTION, MY_PROXY_ELA_CG.PROC_TYPE, MY_PROXY_ELA_CG.PERF_RUN_DATE, MY_PROXY_ELA_CG.INDICATOR_AREA_ID, MY_PROXY_ELA_CG.CONFIG_NAME, MY_PROXY_ELA_CG.PRIMARY_CM, MY_PROXY_ELA_CG.INTERVENTION_TIME, MY_PROXY_ELA_CG.DATA_POINT, MY_PROXY_ELA_CG.CG_VALUE_DISPLAY, MY_PROXY_ELA_CG.CG_VALUE_NUM, MY_PROXY_ELA_CG.CG_LETTER_VIEW, MY_PROXY_ELA_CG.CG_LETTER_VIEW_ALL, MY_PROXY_ELA_CG.Tag, dbo.RPT_SCHOOL_GRADE.INDICATOR_ID, dbo.RPT_SCHOOL_GRADE.B_RULE_VAL1, dbo.RPT_SCHOOL_GRADE.B_RULE_VAL2, dbo.RPT_SCHOOL_GRADE.B_RULE_VAL3, dbo.RPT_SCHOOL_GRADE.B_RULE_VAL4, dbo.RPT_SCHOOL_GRADE.B_RULE_VAL5,
CASE WHEN prepost.POST_ELA_FREQ IS NULL AND (prepost.PRE_ELA_FREQ < MY_PROXY_ELA_CG.INTERVAL OR prepost.PRE_ELA_FREQ LIKE 'ELA/Literacy PrYr/Cumulative') THEN MY_PROXY_ELA_CG.INTERVAL ELSE prepost.POST_ELA_FREQ END AS MY_ELA_FREQ,
CASE WHEN prepost.POST_ELA_FREQ IS NULL AND (prepost.PRE_ELA_FREQ < MY_PROXY_ELA_CG.INTERVAL OR prepost.PRE_ELA_FREQ LIKE 'ELA/Literacy PrYr/Cumulative') THEN MY_PROXY_ELA_CG.SCALE_LOCAL ELSE prepost.POST_ELA_TRACK END AS MY_ELA_TRACK,
CASE WHEN prepost.POST_ELA_FREQ IS NULL AND (prepost.PRE_ELA_FREQ < MY_PROXY_ELA_CG.INTERVAL OR prepost.PRE_ELA_FREQ LIKE 'ELA/Literacy PrYr/Cumulative') THEN MY_PROXY_ELA_CG.CG_LETTER_VIEW ELSE prepost.POST_LETTER_VIEW END AS MY_LETTER_VIEW,
CASE WHEN prepost.POST_ELA_FREQ IS NULL AND (prepost.PRE_ELA_FREQ < MY_PROXY_ELA_CG.INTERVAL OR prepost.PRE_ELA_FREQ LIKE 'ELA/Literacy PrYr/Cumulative') THEN MY_PROXY_ELA_CG.CG_LETTER_VIEW_ALL ELSE prepost.POST_CG_LETTER_SCALE_ALL END AS MY_CG_LETTER_SCALE_ALL,
CASE WHEN dbo.RPT_STUDENT_MAIN.GRADE_ID = 21 THEN -1 WHEN dbo.RPT_STUDENT_MAIN.GRADE_ID = 22 THEN 0 ELSE dbo.RPT_STUDENT_MAIN.GRADE_ID END AS GRADE_ID_RECODE,
CASE WHEN prepost.TTL_TIME >= dbo.RPT_SCHOOL_GRADE.B_RULE_VAL2 THEN 1 WHEN prepost.TTL_TIME < dbo.RPT_SCHOOL_GRADE.B_RULE_VAL2 THEN 0 ELSE NULL END AS MY_MET_Q3_DOSAGE
FROM dbo.RPT_SCHOOL_GRADE INNER JOIN (dbo.RPT_STUDENT_MAIN INNER JOIN (dbo.EVAL_ELA AS prepost LEFT OUTER JOIN
(*****ABOVE_QUERY*****)
AS MY_PROXY_ELA_CG ON (prepost.STUDENT_ID = MY_PROXY_ELA_CG.STUDENT_ID)) ON (dbo.RPT_STUDENT_MAIN.STUDENT_ID = prepost.STUDENT_ID)) ON (dbo.RPT_SCHOOL_GRADE.SCHOOL_ID = prepost.SCHOOL_ID AND dbo.RPT_SCHOOL_GRADE.INDICATOR_ID = 3)
WHERE dbo.RPT_SCHOOL_GRADE.GRADE_ID = dbo.RPT_STUDENT_MAIN.GRADE_ID;

-- QUERY SYNTAX (Merge to pre/post ELA CG data -- BASED ON ABOVE QUERY -- STEP 2 -- this extra step is required since calculations/joins on new variables can't reference variables that were just created in the same query):

SELECT ELACG.*,
CASE WHEN ELACG.PRE_LETTER_VIEW IS NOT NULL AND ELACG.MY_LETTER_VIEW IS NOT NULL THEN ELACG.PRE_LETTER_VIEW + ' to ' + ELACG.MY_LETTER_VIEW ELSE NULL END AS MY_LETTERGRADE_CHANGE_ACTUAL,
CASE WHEN ELACG.PRE_ELA_TRACK IS NOT NULL AND ELACG.MY_ELA_TRACK IS NOT NULL THEN ELACG.PRE_ELA_TRACK + ' to ' + ELACG.MY_ELA_TRACK ELSE NULL END AS MY_PERF_CHANGE,
CASE WHEN ((ELACG.SCHOOL_ID = 2848 Or ELACG.SCHOOL_ID = 2988) And ELACG.GRADE_ID_RECODE < 9) Or (ELACG.SCHOOL_ID = 3010 And ELACG.GRADE_ID_RECODE > 9) THEN '0' ELSE ELACG.DIPLOMAS_NOW_SCHOOL END AS DN_SCHOOL_BY_GRADE,
CASE WHEN ELACG.GRADE_ID_RECODE >= ELACG.B_RULE_VAL3 AND ELACG.GRADE_ID_RECODE <= ELACG.B_RULE_VAL4 THEN 1 WHEN ELACG.GRADE_ID_RECODE < ELACG.B_RULE_VAL3 OR ELACG.GRADE_ID_RECODE > ELACG.B_RULE_VAL4 THEN 0 ELSE NULL END AS MY_IN_IOG_GRADE_RANGE
FROM
(*****ABOVE_QUERY*****)
AS ELACG;

-- QUERY SYNTAX (Can't seem to merge in decrease/increase variable in based on calculated field, so merging in increase/decrease variable here)

SELECT ELACGFINAL.*, letterchange.LetterGradeChange_general AS MY_Change
FROM
(*****ABOVE_QUERY*****)
AS ELACGFINAL LEFT OUTER JOIN dbo.RPT_LETTER_CHANGE_DEGREE AS letterchange
ON (ELACGFINAL.MY_LETTERGRADE_CHANGE_ACTUAL LIKE letterchange.LetterGrade_Change_Actual)
ORDER BY SITE_NAME, SCHOOL_NAME, GRADE_ID, STUDENT_ID;

-- QUERY SYNTAX (Merge letter grade change variable to pre/post ELA CG data -- SINGLE QUERY VERSION):

SELECT ELACGFINAL.*, letterchange.LetterGradeChange_general AS MY_Change
FROM
(SELECT ELACG.*,
CASE WHEN ELACG.PRE_LETTER_VIEW IS NOT NULL AND ELACG.MY_LETTER_VIEW IS NOT NULL THEN ELACG.PRE_LETTER_VIEW + ' to ' + ELACG.MY_LETTER_VIEW ELSE NULL END AS MY_LETTERGRADE_CHANGE_ACTUAL,
CASE WHEN ELACG.PRE_ELA_TRACK IS NOT NULL AND ELACG.MY_ELA_TRACK IS NOT NULL THEN ELACG.PRE_ELA_TRACK + ' to ' + ELACG.MY_ELA_TRACK ELSE NULL END AS MY_PERF_CHANGE,
CASE WHEN ((ELACG.SCHOOL_ID = 2848 Or ELACG.SCHOOL_ID = 2988) And ELACG.GRADE_ID_RECODE < 9) Or (ELACG.SCHOOL_ID = 3010 And ELACG.GRADE_ID_RECODE > 9) THEN '0' ELSE ELACG.DIPLOMAS_NOW_SCHOOL END AS DN_SCHOOL_BY_GRADE,
CASE WHEN ELACG.GRADE_ID_RECODE >= ELACG.B_RULE_VAL3 AND ELACG.GRADE_ID_RECODE <= ELACG.B_RULE_VAL4 THEN 1 WHEN ELACG.GRADE_ID_RECODE < ELACG.B_RULE_VAL3 OR ELACG.GRADE_ID_RECODE > ELACG.B_RULE_VAL4 THEN 0 ELSE NULL END AS MY_IN_IOG_GRADE_RANGE
FROM
(SELECT dbo.RPT_STUDENT_MAIN.SITE_NAME, dbo.RPT_STUDENT_MAIN.SCHOOL_NAME, dbo.RPT_STUDENT_MAIN.GRADE_ID, dbo.RPT_STUDENT_MAIN.DIPLOMAS_NOW_SCHOOL, dbo.RPT_STUDENT_MAIN.STUDENT_ID, dbo.RPT_STUDENT_MAIN.SCHOOL_ID, prepost.PRE_ELA_CG_VALUE, prepost.PRE_ELA_CG_VALUE_DISPLAY, prepost.PRE_ELA_CG_VALUE_NUM, prepost.PRE_ELA_DESC, prepost.PRE_ELA_FREQ, prepost.PRE_ELA_TRACK, prepost.PRE_ELA_TRACK_EVAL, prepost.PRE_SCENARIO, prepost.PRE_LETTER_VIEW, prepost.PRE_CG_LETTER_SCALE_ALL, prepost.DOSAGE_CATEGORY, prepost.TTL_TIME, prepost.POST_ELA_CG_VALUE, prepost.POST_ELA_CG_VALUE_DISPLAY, prepost.POST_ELA_CG_VALUE_NUM, prepost.POST_ELA_DESC, prepost.POST_ELA_FREQ, prepost.POST_ELA_TRACK, prepost.POST_ELA_TRACK_EVAL, prepost.POST_SCENARIO, prepost.POST_LETTER_VIEW, prepost.POST_CG_LETTER_SCALE_ALL, prepost.LETTERGADE_CHANGE_ACTUAL, prepost.LETTERGADE_CHANGE_GENERAL, prepost.CG_Performance_Level_Change, prepost.CG_Change, prepost.Enrollment_Duration, prepost.ENROLL_DAYS, prepost.STATUS_SITE_DOSAGE_GOAL, prepost.SITE_DOSAGE_GOAL, prepost.Attendance_IA, prepost.ELA_IA, prepost.Math_IA, prepost.Behavior_IA, MY_PROXY_ELA_CG.CONFIG_ID, MY_PROXY_ELA_CG.FREQUENCY_PERIOD_ID, MY_PROXY_ELA_CG.SKILL_ID, MY_PROXY_ELA_CG.SKILL_DESCRIPTION, MY_PROXY_ELA_CG.INTERVAL, MY_PROXY_ELA_CG.INDICATOR_DESC, MY_PROXY_ELA_CG.FREQ_SORT, MY_PROXY_ELA_CG.STUDENT_NAME, MY_PROXY_ELA_CG.SITE_ID, MY_PROXY_ELA_CG.PERF_DATE, MY_PROXY_ELA_CG.PERFORMANCE_VALUE, MY_PROXY_ELA_CG.PERFORMANCE_VALUE_NUMERIC, MY_PROXY_ELA_CG.SCALE_LOCAL, MY_PROXY_ELA_CG.SCALE_EVAL, MY_PROXY_ELA_CG.SCALE_TYPE, MY_PROXY_ELA_CG.PERF_DIRECTION, MY_PROXY_ELA_CG.PROC_TYPE, MY_PROXY_ELA_CG.PERF_RUN_DATE, MY_PROXY_ELA_CG.INDICATOR_AREA_ID, MY_PROXY_ELA_CG.CONFIG_NAME, MY_PROXY_ELA_CG.PRIMARY_CM, MY_PROXY_ELA_CG.INTERVENTION_TIME, MY_PROXY_ELA_CG.DATA_POINT, MY_PROXY_ELA_CG.CG_VALUE_DISPLAY, MY_PROXY_ELA_CG.CG_VALUE_NUM, MY_PROXY_ELA_CG.CG_LETTER_VIEW, MY_PROXY_ELA_CG.CG_LETTER_VIEW_ALL, MY_PROXY_ELA_CG.Tag, dbo.RPT_SCHOOL_GRADE.INDICATOR_ID, dbo.RPT_SCHOOL_GRADE.B_RULE_VAL1, dbo.RPT_SCHOOL_GRADE.B_RULE_VAL2, dbo.RPT_SCHOOL_GRADE.B_RULE_VAL3, dbo.RPT_SCHOOL_GRADE.B_RULE_VAL4, dbo.RPT_SCHOOL_GRADE.B_RULE_VAL5,
CASE WHEN prepost.POST_ELA_FREQ IS NULL AND (prepost.PRE_ELA_FREQ < MY_PROXY_ELA_CG.INTERVAL OR prepost.PRE_ELA_FREQ LIKE 'ELA/Literacy PrYr/Cumulative') THEN MY_PROXY_ELA_CG.INTERVAL ELSE prepost.POST_ELA_FREQ END AS MY_ELA_FREQ,
CASE WHEN prepost.POST_ELA_FREQ IS NULL AND (prepost.PRE_ELA_FREQ < MY_PROXY_ELA_CG.INTERVAL OR prepost.PRE_ELA_FREQ LIKE 'ELA/Literacy PrYr/Cumulative') THEN MY_PROXY_ELA_CG.SCALE_LOCAL ELSE prepost.POST_ELA_TRACK END AS MY_ELA_TRACK,
CASE WHEN prepost.POST_ELA_FREQ IS NULL AND (prepost.PRE_ELA_FREQ < MY_PROXY_ELA_CG.INTERVAL OR prepost.PRE_ELA_FREQ LIKE 'ELA/Literacy PrYr/Cumulative') THEN MY_PROXY_ELA_CG.CG_LETTER_VIEW ELSE prepost.POST_LETTER_VIEW END AS MY_LETTER_VIEW,
CASE WHEN prepost.POST_ELA_FREQ IS NULL AND (prepost.PRE_ELA_FREQ < MY_PROXY_ELA_CG.INTERVAL OR prepost.PRE_ELA_FREQ LIKE 'ELA/Literacy PrYr/Cumulative') THEN MY_PROXY_ELA_CG.CG_LETTER_VIEW_ALL ELSE prepost.POST_CG_LETTER_SCALE_ALL END AS MY_CG_LETTER_SCALE_ALL,
CASE WHEN dbo.RPT_STUDENT_MAIN.GRADE_ID = 21 THEN -1 WHEN dbo.RPT_STUDENT_MAIN.GRADE_ID = 22 THEN 0 ELSE dbo.RPT_STUDENT_MAIN.GRADE_ID END AS GRADE_ID_RECODE,
CASE WHEN prepost.TTL_TIME >= dbo.RPT_SCHOOL_GRADE.B_RULE_VAL2 THEN 1 WHEN prepost.TTL_TIME < dbo.RPT_SCHOOL_GRADE.B_RULE_VAL2 THEN 0 ELSE NULL END AS MY_MET_Q3_DOSAGE
FROM dbo.RPT_SCHOOL_GRADE INNER JOIN (dbo.RPT_STUDENT_MAIN INNER JOIN (dbo.EVAL_ELA AS prepost LEFT OUTER JOIN
(SELECT allELA1.CONFIG_ID, allELA1.STUDENT_ID, allELA1.FREQUENCY_PERIOD_ID, allELA1.SKILL_ID, allELA1.SKILL_DESCRIPTION, allELA1.INTERVAL, allELA1.INDICATOR_DESC, allELA1.FREQ_SORT, allELA1.SCHOOL_NAME, allELA1.SITE_NAME, allELA1.STUDENT_NAME, allELA1.SCHOOL_ID, allELA1.SITE_ID, allELA1.PERF_DATE, allELA1.PERFORMANCE_VALUE, allELA1.PERFORMANCE_VALUE_NUMERIC, allELA1.SCALE_LOCAL, allELA1.SCALE_EVAL, allELA1.SCALE_TYPE, allELA1.PERF_DIRECTION, allELA1.PROC_TYPE, allELA1.PERF_RUN_DATE, allELA1.INDICATOR_AREA_ID, allELA1.CONFIG_NAME, allELA1.PRIMARY_CM, allELA1.INTERVENTION_TIME, allELA1.DATA_POINT, allELA1.CG_VALUE_DISPLAY, allELA1.CG_VALUE_NUM, allELA1.CG_LETTER_VIEW, allELA1.CG_LETTER_VIEW_ALL, allELA1.Tag
FROM dbo.RPT_PERFORMANCE_LEVEL AS allELA1 LEFT OUTER JOIN dbo.RPT_PERFORMANCE_LEVEL AS allELA2 ON (allELA1.STUDENT_ID = allELA2.STUDENT_ID AND allELA1.INDICATOR_DESC LIKE allELA2.INDICATOR_DESC AND allELA1.FREQ_SORT < allELA2.FREQ_SORT)
WHERE allELA2.STUDENT_ID IS NULL AND allELA1.SKILL_DESCRIPTION LIKE 'ELA Course Grade' AND allELA1.Tag IS NULL)
AS MY_PROXY_ELA_CG ON (prepost.STUDENT_ID = MY_PROXY_ELA_CG.STUDENT_ID)) ON (dbo.RPT_STUDENT_MAIN.STUDENT_ID = prepost.STUDENT_ID)) ON (dbo.RPT_SCHOOL_GRADE.SCHOOL_ID = prepost.SCHOOL_ID AND dbo.RPT_SCHOOL_GRADE.INDICATOR_ID = 3)
WHERE dbo.RPT_SCHOOL_GRADE.GRADE_ID = dbo.RPT_STUDENT_MAIN.GRADE_ID)
AS ELACG)
AS ELACGFINAL LEFT OUTER JOIN dbo.RPT_LETTER_CHANGE_DEGREE AS letterchange
ON (ELACGFINAL.MY_LETTERGRADE_CHANGE_ACTUAL LIKE letterchange.LetterGrade_Change_Actual)
ORDER BY SITE_NAME, SCHOOL_NAME, GRADE_ID, STUDENT_ID;